/* app.jsÔºà2025-06-07-1410Ôºâ */

/* 1) Supabase ÂàùÊúüÂåñ */
const db = window.supabase.createClient(
  'https://hccairtzksnnqdujalgv.supabase.co',        // ‚òÖ„ÅÇ„Å™„Åü„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà URL
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhjY2FpcnR6a3NubnFkdWphbGd2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkyNjI2MTYsImV4cCI6MjA2NDgzODYxNn0.TVDucIs5ClTWuykg_fy4yv65Rg-xbSIPFIfvIYawy_k' // ‚òÖÊ≠£„Åó„ÅÑ anon ÂÖ¨Èñã„Ç≠„Éº
);

document.getElementById('login-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  const email = document.getElementById('email').value;
  const { error } = await db.auth.signInWithOtp({ email });

  const msg = document.getElementById('login-message');
  if (error) {
    msg.textContent = '‚ùå „É°„Éº„É´ÈÄÅ‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü';
    console.error(error);
  } else {
    msg.textContent = '‚úÖ „É°„Éº„É´„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºÅ';
  }
});

/* 2) „Ç∞„É≠„Éº„Éê„É´Â§âÊï∞ */
let deviceId = localStorage.getItem('deviceId') || (() => {
  const id = crypto.randomUUID();
  localStorage.setItem('deviceId', id);
  return id;
})();
let stampCount  = 0;
let html5QrCode = null;
let eventBound  = false;

/* 3) „Ç¢„Éó„É™Âõ∫Êúâ„Éá„Éº„Çø */
const appData = {
  rewards: [
    { type: "coffee", stampsRequired: 3, name: "„Ç≥„Éº„Éí„Éº1ÊùØÁÑ°Êñô" },
    { type: "curry",  stampsRequired: 6, name: "„Ç´„É¨„Éº1ÊùØÁÑ°Êñô" }
  ],
  qrString: "ROUTE227_STAMP_2025"
};

/* 4) DOM „Ç≠„É£„ÉÉ„Ç∑„É• */
const navLinks              = document.querySelectorAll('.nav-link');
const sections              = document.querySelectorAll('.section');
const categoryTabs          = document.querySelectorAll('.category-tab');
const articlesContainer     = document.getElementById('articles-container');
const coffeeRewardButton    = document.getElementById('coffee-reward');
const curryRewardButton     = document.getElementById('curry-reward');
const notificationTitle     = document.getElementById('notification-title');
const notificationMessage   = document.getElementById('notification-message');
const notificationModal     = document.getElementById('notification-modal');
const scanQrButton          = document.getElementById('scan-qr');
const stamps                = document.querySelectorAll('.stamp');

/* ---------- ÂÖ±ÈÄö„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£ ---------- */
// localStorage ‚Üí stampCount
function loadStampCount() {
  const saved = localStorage.getItem('route227_stamps');
  if (saved !== null) stampCount = parseInt(saved, 10);
}

// Supabase UPDATE
async function updateStampCount(newCount) {
  const { error } = await db
    .from('users')
    .update({ stamp_count: newCount, updated_at: new Date().toISOString() })
    .eq('device_id', deviceId);
  if (error) console.error('„Çπ„Çø„É≥„ÉóÊõ¥Êñ∞„Ç®„É©„Éº:', error);
}

async function syncStampFromDB() {
  const { data, error } = await db
    .from('users')
    .select('stamp_count')
    .eq('device_id', deviceId)
    .single();

  let remote = 0;

  /* ‚ñº‚ñº „Åì„Åì„Çí‰øÆÊ≠£ ‚ñº‚ñº */
  if (error && !data) {
    // ‚Äï Êñ∞Ë¶è„É¶„Éº„Ç∂„Éº‰ΩúÊàê ‚Äï
    const { error: insertError } = await db
      .from('users')
      .insert([{ device_id: deviceId, stamp_count: stampCount }]); // ‚Üê ‚òÖ„Åì„ÅìÔºÅ

    if (insertError) {
      console.error('INSERT error', insertError);
    }
    remote = stampCount;            // 406 „ÇíÈÅø„Åë„Çã„Åü„ÇÅ select „ÅØÁúÅÁï•
  } else {
    remote = data?.stamp_count ?? 0;
  }
  /* ‚ñ≤‚ñ≤ ‰øÆÊ≠£„Åì„Åì„Åæ„Åß ‚ñ≤‚ñ≤ */

  // Â∑ÆÂàÜ„Éû„Éº„Ç∏
  if (remote > stampCount) {
    stampCount = remote;
    localStorage.setItem('route227_stamps', stampCount);
  } else if (remote < stampCount) {
    await updateStampCount(stampCount);
  }
}

// „Çπ„Çø„É≥„ÉóË°®Á§∫
function updateStampDisplay() {
  stamps.forEach((el, i) =>
    i < stampCount ? el.classList.add('active') : el.classList.remove('active'));
}

// Â†±ÈÖ¨„Éú„Çø„É≥
function updateRewardButtons() {
  coffeeRewardButton.disabled = stampCount < 3;
  curryRewardButton.disabled  = stampCount < 6;
}

// ÈÄöÁü•„É¢„Éº„ÉÄ„É´
function showNotification(title, msg) {
  notificationTitle.textContent   = title;
  notificationMessage.textContent = msg;
  notificationModal.classList.add('active');
}

// „Çπ„Çø„É≥„ÉóÔºã1
async function addStamp() {
  if (stampCount >= 6) return;
  stampCount++;
  localStorage.setItem('route227_stamps', stampCount);
  await updateStampCount(stampCount);

  updateStampDisplay();
  updateRewardButtons();

  if (stampCount === 3) showNotification('üéâ', '„Ç≥„Éº„Éí„Éº1ÊùØÁÑ°Êñô„Ç≤„ÉÉ„ÉàÔºÅ');
  else if (stampCount === 6) showNotification('üéâ', '„Ç´„É¨„Éº1ÊùØÁÑ°Êñô„Ç≤„ÉÉ„ÉàÔºÅ');
  else showNotification('„Çπ„Çø„É≥„ÉóÁç≤Âæó', `ÁèæÂú® ${stampCount} ÂÄã`);
}

// Â†±ÈÖ¨‰∫§Êèõ
async function redeemReward(type) {
  if (type === 'coffee' && stampCount >= 3) stampCount -= 3;
  if (type === 'curry'  && stampCount >= 6) stampCount -= 6;

  localStorage.setItem('route227_stamps', stampCount);
  await updateStampCount(stampCount);
  updateStampDisplay();
  updateRewardButtons();
  showNotification('‰∫§ÊèõÂÆå‰∫Ü', type === 'coffee' ? '„Ç≥„Éº„Éí„Éº‰∫§ÊèõÔºÅ' : '„Ç´„É¨„Éº‰∫§ÊèõÔºÅ');
}

/* ---------- „Éï„Ç£„Éº„ÉâË®ò‰∫ã ---------- */
async function renderArticles(category) {
  const list = [
    { url:'https://machico.mu/special/detail/2691',category:'„Ç§„Éô„É≥„Éà',title:'Machico 2691',summary:'„Ç§„Éô„É≥„ÉàË®ò‰∫ã' },
    { url:'https://machico.mu/special/detail/2704',category:'„Ç§„Éô„É≥„Éà',title:'Machico 2704',summary:'„Ç§„Éô„É≥„ÉàË®ò‰∫ã' },
    { url:'https://machico.mu/jump/ad/102236',      category:'„Éã„É•„Éº„Çπ', title:'Machico 102236',summary:'„Éã„É•„Éº„ÇπË®ò‰∫ã' },
    { url:'https://machico.mu/special/detail/2926', category:'„Éã„É•„Éº„Çπ', title:'Machico 2926',summary:'„Éã„É•„Éº„ÇπË®ò‰∫ã' }
  ];

  const targets = list.filter(a => category === 'all' || a.category === category);
  articlesContainer.innerHTML = '<div class="loading-spinner"></div>';

  const cards = await Promise.all(targets.map(async a => {
    try {
      const res = await fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(a.url)}`);
      const d   = await res.json();
      const doc = new DOMParser().parseFromString(d.contents, 'text/html');
      return { ...a, img: doc.querySelector("meta[property='og:image']")?.content || 'assets/placeholder.jpg' };
    } catch {
      return { ...a, img: 'assets/placeholder.jpg' };
    }
  }));

  articlesContainer.innerHTML = '';
  cards.forEach(a => {
    const div = document.createElement('div');
    div.className = 'card article-card';
    div.innerHTML = `
      <a href="${a.url}" target="_blank" rel="noopener noreferrer">
        <img src="${a.img}" alt="${a.title}„ÅÆ„Çµ„É†„Éç„Ç§„É´">
        <div class="card__body" aria-label="Ë®ò‰∫ã: ${a.title}">
          <span class="article-category">${a.category}</span>
          <h3 class="article-title">${a.title}</h3>
          <p class="article-excerpt">${a.summary}</p>
        </div>
      </a>`;
    articlesContainer.appendChild(div);
  });
}

/* ---------- QR „Çπ„Ç≠„É£„Éä ---------- */
function initQRScanner() {
  const qrReader = document.getElementById('qr-reader');
  qrReader.innerHTML = '';
  html5QrCode = new Html5Qrcode('qr-reader');

  html5QrCode.start(
    { facingMode:'environment' },
    { fps:10, qrbox:{ width:250, height:250 } },
    async text => {
      await html5QrCode.stop(); html5QrCode.clear();
      if (text === appData.qrString) addStamp();
      else showNotification('ÁÑ°Âäπ„Å™QR', 'Ë™≠„ÅøÂèñ„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü');
      closeModal(document.getElementById('qr-modal'));
    },
    () => {}
  ).catch(()=>{qrReader.innerHTML='<div class="status status--error">„Ç´„É°„É©„Ç®„É©„Éº</div>';});
}

function closeAllModals() {
  document.querySelectorAll('.modal').forEach(m => m.classList.remove('active'));
  if (html5QrCode) html5QrCode.stop().catch(()=>{}).then(()=>html5QrCode.clear());
}
function closeModal(m){ m.classList.remove('active'); }

/* ---------- „Ç§„Éô„É≥„Éà„Éê„Ç§„É≥„Éâ ---------- */
function setupEventListeners() {
  if (eventBound) return;
  eventBound = true;

  /* nav */
  navLinks.forEach(link => {
    link.addEventListener('click', async () => {
      navLinks.forEach(n => n.classList.remove('active'));
      link.classList.add('active');
      sections.forEach(s => s.classList.remove('active'));
      const target = document.getElementById(link.dataset.section);
      target.classList.add('active');

      if (link.dataset.section === 'foodtruck-section') {
        await syncStampFromDB();
        updateStampDisplay();
        updateRewardButtons();
      }
    }, { passive:true });
  });

  /* „Ç´„ÉÜ„Ç¥„É™„Çø„Éñ */
  categoryTabs.forEach(tab => {
    tab.addEventListener('click', () => {
      categoryTabs.forEach(t => t.classList.remove('active'));
      tab.classList.add('active');
      renderArticles(tab.dataset.category);
    }, { passive:true });
  });

  /* QR */
  scanQrButton.addEventListener('click', () => {
    document.getElementById('qr-modal').classList.add('active');
    initQRScanner();
  });

  /* Èñâ„Åò„ÇãÁ≥ª */
  document.querySelectorAll('.close-modal').forEach(btn =>
    btn.addEventListener('click', closeAllModals, { passive:true })
  );
  document.querySelector('.close-notification')
    .addEventListener('click', () => closeModal(notificationModal), { passive:true });

  /* Â†±ÈÖ¨ */
  coffeeRewardButton.addEventListener('click', () => redeemReward('coffee'));
  curryRewardButton .addEventListener('click', () => redeemReward('curry'));
}

/* ---------- ÂàùÊúüÂåñ ---------- */
async function initApp() {
  loadStampCount();
  await syncStampFromDB();
  updateStampDisplay();
  updateRewardButtons();
  renderArticles('all');
  setupEventListeners();
}

/* ---------- Ëµ∑Âãï ---------- */
document.addEventListener('DOMContentLoaded', initApp);
